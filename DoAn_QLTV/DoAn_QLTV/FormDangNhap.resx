<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAA3NJREFUWEfV
        l81LVFEYxkfNUKOoQIv6A/pwUbmIjBKdIij7gLaRi2oVTtDGxVQLN0WbdlJhflBEMZK60LZSjlZ+MQxM
        RRRSkKC0CTKsRqffc30ZHWaa7nWmRQ/8mHuec877nnvOPfee8f1XSiQSa8APV6AVuqEXHsA1qINV1jx/
        ImgVtME3iEMEnsAduAd95qnuC3TAduu+chFkkwVbgGdwBtZZdZqoK4dz8Bx+gQZYYdXeRMf9MAWv4ZDZ
        rkWfeojBJ9hjtjvR4STMQSeUmO1Z9C2FR6ClO252dtGwBr7DdbNyEnEK4AZoENlnggYbQdOuB67A7Jyl
        WPAYPkK52emiUtvpLZSalTcRswz0PN02K1VUVIKe9jqz8i5inwDtjvQtitkOQ1Z0Lfrch31W/KtoO6hc
        VlwS5mnYZUXXUjD4CtVmZRXtzoNeVvl5YxKoELRd9ZTXmP1H0aYC9MasNSt3EawItBSuZoI2UbhqxfyI
        gMsHkfWZoL4fOq3oGA0QygP6QP0EDWKHhU8TdfqA9VrRMc5CpoBe8TKAHivmRwT0sgRPocOKuYtgXh/C
        lxC0Ym4iUMbk4XB47djY2EXohhfQNz4+HoxEIltpp3PGNmu6KIyVvoh0YElJPjo6epSE0zDDdTu/zdAC
        H2AWAtZ0SQRY6av4ISTX3JLHudtb/JbJm5iYcL6AtCukvhH/B79N8pKiUh+jefCb5Vk27dNKbpYvFout
        VkKoMkuDbKAcHxkZqTRrUSTXWr4DZ+ReRVCtuaY+2V/XkGBQB81yhDcIrVZcFIl1IPkMWlfPBxIC6oFz
        ttfw8HBpNBrdwPRv0QC462Mqa5as7SWY1HWKSHwAdCS7aZZrcZdDBG3WmvOraU9kYIF2fgZ0ius565oq
        kuvgoEOpTkiuD6UE7IcWXZNgLxymXA+agcsqM7gaysVwAaacjplE4mrQ+fANHDE7q7izIEHfh0KhIrOy
        PQNari4rZhaJ9e3W9tTuCIO+GeutOk16yRB0ljttNMs3MDBQgrfAnSffExoM3ryWwqzsIulu0H9BHTo0
        GH3P9b9Q/3x0gtbn9RVsJnAAtM8brLsS+vGK7VrJZ/htcyq9iAQ62dZCEO6CBtED2jXynMMmyZtIEgdt
        tQBlPXBac0277rxN7wcn6L8SU76TZK0wCdoRU9AFy07dPt9vmfyWvQq67rEAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAA65JREFUWEfV
        l2mITWEYx8f2xS7G2mRL+aA0hkEmNZI1o3zxCdkiTZqIQklJlCUahCzZ5YMPM2NnSpGhEQlZGpORGGSs
        2V2//7nPuePe854zZiL51697n//znu19z/u+z0n7rxSLxRrDUFgKhXAMTsJeWA1TId2a/zlx0gzYAtXw
        DW6BdBd08R/wBF6A8hdhMjSyUzRMnKAVbICPUAbToDXMh+fQydqthMfQHDJhM7yB65Drnay+4sA+oCet
        gDyz5TcD9USBWfJ04WeQb5a8dNgBX2EJ/H5v0HgY1IDGuKXZnojHwSdoZ5Yn4rVQZmFCeOPhNRyCxmaH
        i0Z68pegOz8HZ1NQj7xN8cQN0LvgOuY+SBvtMm7RQGP+AEphTQjv4XiK56NxP53i+aiH9C7NtssFRVJT
        qQqSutcXvsb6Oww3K0n4uvHVFgZErgB0k53NqhVmL9DYjjUrIHIDQQq7wU1QZGFA5BrBFdhuVq3s4MsW
        OkVe07DKwoDIzYQKC50iPxa+QAezPLMJPIUpZjlFfjlcsjAgcqNAL2/klCOvF3muhZ6RC5+hrVlOkd8I
        UV2cBVIbs5wirxey1ELPWADlFoaKNvtgt4UBkesBUk+znCKfBzUWeobW+f0Whoo2JbDOwoDIaRpLWWY5
        Rb53vFmsvW9oXv8LDfJv4DwchpF1cA0Opni/MhokzXdX3kczQRri38BR2OoFEaJNEay3MCBy2imlAWY5
        Rb5zvFmsn29oDSj2ggjR5ghsszAgcl1A6muWU+Sz481stvBnBlR7QYRoswtCX1Zy2sikDLOcIp8PtQsW
        QXcdhTLNcoq85m+JhQGR05NpR2xhllPki2GXhXFhXIXI7ZL8PLhjYUDkVIZF9iR5jb9WyzFmxYUxBbTP
        B3cqEzm9vdqwnIUF/jKoaz9RL94MnANDpdZtOACuqSNmgaQndeW1UF1I8X5lIqgmmGCXTRaJEaAx/Js6
        A+GbFclVoBou26wk4es7oNDChPA6goqVwWYlhKfvCZXvjyD6u4EG2po1319B4CbwVJJXWpgQ3nRQqZ40
        tsQaWm1iqoQiF6iEaNgUdoO26MWQOCn/e4KGKccsT8RazpN2SuK+UA6VEF/16iMOmgPvQFN0Eng3wu8J
        SKyc/Pfnv9dj/OpLSh80H+AUdPQaNkQc3A32gHpDlYy+CVeAtAi0+t0DfQWprtDOqpJLHzWh9WW9xcm6
        wkLQNFNp7tJD2AkqzZxrxR+RTg5avlWC5UB/aG3peigt7Seb0lT0yTuhmQAAAABJRU5ErkJggg==
</value>
  </data>
</root>